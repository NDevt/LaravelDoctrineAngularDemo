{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/dialog.component.ts","webpack:///src/app/dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dialog","ordersTotal","displayedColumns","orders","fetchFirstPageData","fetch","raw","json","result","data","count","dataSource","paginator","console","error","open","method","order","status","pageIndex","res","filterValue","trim","toLowerCase","filter","selector","templateUrl","styleUrls","DemoMaterialModule","AppModule","declarations","imports","providers","bootstrap","DialogDataExampleDialog","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div *ngIf=\"orders.length\" class=\"example-container mat-elevation-z8\">\n  <mat-table [dataSource]=\"dataSource\">\n\n      <ng-container *ngFor=\"let column of displayedColumns\">\n        <ng-container *ngIf=\"column != 'actions'\" [matColumnDef]=column>\n          <mat-header-cell *matHeaderCellDef> {{column.toUpperCase()}} </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{row[column]}} </mat-cell>\n        </ng-container>\n      </ng-container>\n\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef> ACTIONS </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <ng-container *ngIf=\"row.status != 'cancelled'\">\n          <button mat-raised-button color=\"warn\" (click)=\"onCancelOrder(row.id)\">Cancel</button>\n        </ng-container>\n      </mat-cell>\n    </ng-container>\n\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n\n  <mat-paginator (page)=\"onPaginate($event)\"  [pageSize]=\"10\" [length]=\"ordersTotal\" [pageSizeOptions]=\"[10]\"></mat-paginator>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {DialogDataExampleDialog} from \"./dialog.component\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  ordersTotal = 0;\n  displayedColumns = ['id', 'date', 'customer', 'address1', 'city', 'postcode', 'country', 'amount', 'status', 'deleted', 'lastModified', 'actions'];\n  dataSource: MatTableDataSource<OrderData>;\n  orders: OrderData[] = [];\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.fetchFirstPageData();\n  }\n\n  constructor(public dialog: MatDialog) {}\n\n  async fetchFirstPageData() {\n    try {\n      const raw = await fetch(\"/orders\");\n      const result = await raw.json();\n      this.orders = result.data;\n      this.ordersTotal = result.count;\n      this.dataSource = new MatTableDataSource(this.orders);\n      this.dataSource.paginator = this.paginator;\n    } catch (e) {\n      console.error(\"Failed to fetch orders, please try again later\");\n      this.dialog.open(DialogDataExampleDialog, {\n        data: \"Something went wrong\"\n      });\n    }\n  }\n\n  async onCancelOrder(id: number) {\n    try {\n      const raw = await fetch(`/orders/${id}/cancel`, { method: 'PUT' });\n      const result = await raw.json();\n\n      for (let order of this.orders) {\n        if(order.id === id) {\n          order.status = \"cancelled\";\n          this.dataSource.data = this.orders;\n          break;\n        }\n      }\n\n      // TODO: change state of canceled order if success\n      this.dialog.open(DialogDataExampleDialog, {\n        data: `Order ${id} successfully canceled!`\n      });\n    } catch (e) {\n      console.error(\"Failed to cancel order, please try again later\");\n      this.dialog.open(DialogDataExampleDialog, {\n        data: \"Something went wrong\"\n      });\n    }\n\n  }\n\n  onPaginate(e: any) {\n    fetch(`/orders?page=${e.pageIndex}`).then((res) => res.json()).then((result: any) => {\n      this.orders = result.data;\n      this.ordersTotal = result.count;\n      this.dataSource.data = this.orders;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\n\nexport interface OrderData {\n  \"id\": number,\n  \"date\": string,\n  \"customer\": string,\n  \"address1\": string,\n  \"city\": string,\n  \"postcode\": string,\n  \"country\": string,\n  \"amount\": number,\n  \"status\": string,\n  \"deleted\": string,\n  \"lastModified\": string\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatStepperModule} from \"@angular/material/stepper\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatNativeDateModule, MatRippleModule} from \"@angular/material/core\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {DialogDataExampleDialog} from \"./dialog.component\";\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogDataExampleDialog\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    DemoMaterialModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {Component, Inject} from \"@angular/core\";\r\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'dialog-data-example-dialog',\r\n  templateUrl: './dialog.component.html',\r\n})\r\nexport class DialogDataExampleDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) {}\r\n}\r\n","<div mat-dialog-content>\r\n  {{data}}\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}